08.01_12:48:05_709 DEBUG [XGPushService]          reportLastServiceState {"srv_stime":1564379101416,"srv_etime":1564379920132,"srv_startTime":3,"srv_freason":[".stop_connect",".stop_connect"],"hb_suc":0,"hb_failed":3,"hb_freason":[{"errorCode":10100,"np":-1},{"errorCode":10100,"np":-1},{"errorCode":10100,"np":-1}],"con_suc":1,"con_failed":3,"con_freason":[{"errorCode":10100,"np":-1},{"errorCode":10100,"np":-1},{"errorCode":10100,"np":-1}]}
08.01_12:48:05_842 DEBUG [TPush]                  com.xm.csee.AUTH_XGPUSH,com.xm.csee,com.tencent.android.tpush.XGPushProvider
08.01_12:48:06_361 TRACE [PushServiceManager]     (ignore) running v3 service count 0
08.01_12:48:06_366 TRACE [PushServiceManager]     tryToKeepServiceAlive socketFinalName:ade572bd8bdee4b85d5361556c2fa61af22fd9686fb7f9abb0c1729984bf0b9155d11a
08.01_12:48:06_369 INFO  [aa]                     is xg_service
08.01_12:48:06_370 INFO  [PushServiceManager]     start as main service......


			08.01_12:48:06_371 INFO  [PushServiceManager] Service's first running at com.xm.csee version : 3.26 #####!!!!!!! "com.xm.csee" is app ID from google play store app iCSEE!!!!!!!!



08.01_12:48:06_384 TRACE [TpnsChannel]            Action -> checkAndSetupClient( tpnsClient = null, isClientCreating = false)
08.01_12:48:06_385 DEBUG [XGHorse]                Action ->  createOptimalSocketChannel run


			08.01_12:48:06_399 DEBUG [OptimalLinkSelector]    Action -> startHorseTask with key = 03 # Start horse Task?????  WTFFFFFFFFF !!!!!!!!


08.01_12:48:06_591 DEBUG [OptimalLinkSelector]    Tools.getChannelType = 0
08.01_12:48:06_592 DEBUG [OptimalLinkSelector]    XINGE Use TcpTask
08.01_12:48:06_599 ERROR [XGService]              getStrategyItems is null
08.01_12:48:06_599 DEBUG [BaseTask]               startTask() with strategyItems size = 28
08.01_12:48:06_606 DEBUG [HorseThread]             HorseThread:cThread[Thread-184,5,main]current NetworkType:3,strategyItem:serverIp=203.205.211.75,serverPort=8080, proxyIp=,proxyPort=80, protocolType=tcp, redirect=0
08.01_12:48:06_613 DEBUG [httpDns]                cacheResult:{"ips":"203.205.146.122;203.205.211.75","ttl":300,"exp":1564379403423},diff:-305883190
08.01_12:48:06_614 WARN  [httpDns]                cacheResult Exp.
08.01_12:48:08_086 DEBUG [httpDns]                getAddrByName line:3eeef9bfa6f89c851fca55b4d11e901d3eeef9bfa6f89c8508a380b74f759b06b48b22aa98aa5d25
08.01_12:48:08_108 DEBUG [httpDns]                ttl:300,300
08.01_12:48:08_120 DEBUG [httpDns]                cacheResult:{"ips":"203.205.146.122;203.205.211.75","ttl":300,"exp":1564685588108},diff:299988
08.01_12:48:08_121 DEBUG [SocketClient]           use httpdns StrategyItem:203.205.146.122:8080
08.01_12:48:08_132 DEBUG [SocketClient]           connect to 203.205.146.122:8080
08.01_12:48:09_131 TRACE [BaseTask]               Horse run onRedirect(org:serverIp=203.205.146.122,serverPort=8080, proxyIp=,proxyPort=80, protocolType=tcp, redirect=0,redirect:serverIp=203.205.146.122,serverPort=443, proxyIp=,proxyPort=80, protocolType=tcp, redirect=1)
08.01_12:48:09_361 TRACE [TpnsChannel]            ICreateSocketChannelCallback onSuccess(java.nio.SocketChannelImpl@22344909,java.nio.SocketChannelImpl@22344909)
08.01_12:48:09_364 INFO  [TpnsClient]             Connect to Xinge Server succeed!
08.01_12:48:09_497 DEBUG [TpnsChannel]            Action -> sendReconnMessage with token - 1af22fd9686fb7f9abb0c1729984bf0b9155d11a
08.01_12:48:09_533 TRACE [TpnsChannel]            Action -> checkAndSetupClient( tpnsClient = a(ip:203.205.146.122,port:8080,protocol:tcp), isClientCreating = false)
08.01_12:48:09_535 INFO  [TpnsClient]             TpnsClient is running and ready for send and recevie msg.
08.01_12:48:09_535 DEBUG [HorseThread]             HorseThread:cThread[Thread-184,5,main]current NetworkType:3,strategyItem:serverIp=203.205.146.122,serverPort=443, proxyIp=,proxyPort=80, protocolType=tcp, redirect=1
08.01_12:48:09_541 DEBUG [httpDns]                cacheResult:{"ips":"203.205.146.122;203.205.211.75","ttl":300,"exp":1564685588108},diff:298567
08.01_12:48:09_543 DEBUG [SocketClient]           use httpdns StrategyItem:203.205.146.122:443
08.01_12:48:09_553 DEBUG [SocketClient]           connect to 203.205.146.122:443
08.01_12:48:09_561 DEBUG [TpnsChannel]            Action -> clientDidSendPacket packet : h protocol = 1 command = TPNS_COMMAND_RECONNECT isResponse = false packetLength = 651
08.01_12:48:10_140 DEBUG [TpnsChannel]            Action -> clientDidReceivePacket packet : g protocol = 1 command = TPNS_COMMAND_RECONNECT isResponse = true packetLength = 20
08.01_12:48:10_140 DEBUG [TpnsChannel]            Action -> clientDidReceivePacket RequestSuccRunnable NEV1 : g protocol = 1 command = TPNS_COMMAND_RECONNECT isResponse = true packetLength = 20
08.01_12:48:10_200 DEBUG [PushServiceNetworkHandler] reconnCallback onResponse request:token: 1af22fd9686fb7f9abb0c1729984bf0b9155d11a
08.01_12:48:10_200 DEBUG [PushServiceNetworkHandler] deviceId: dff6795550305bc9cbfe5dbffe1b2d5b
08.01_12:48:10_200 DEBUG [PushServiceNetworkHandler] networkType: 3
08.01_12:48:10_200 DEBUG [PushServiceNetworkHandler] unregInfoList: 0, []
08.01_12:48:10_200 DEBUG [PushServiceNetworkHandler] recvMsgList: 0, []
08.01_12:48:10_200 DEBUG [PushServiceNetworkHandler] mutableInfo: {
08.01_12:48:10_200 DEBUG [PushServiceNetworkHandler] 	ssid: 
08.01_12:48:10_200 DEBUG [PushServiceNetworkHandler] 	bssid:
 
			08.01_12:48:10_200 DEBUG [PushServiceNetworkHandler] 	mac: "00:00:00:00:00:00" # <--- actually my device mac address
			
		
			08.01_1248:10_200 DEBUG [PushServiceNetworkHandler] 	wflist: [{"bs":"1 more mac address ","ss":"APOY*****"},{"bs":"another mac address","ss":"SAN****"},{"bs":"another mac address","ss":"INFINIT******"},{"bs":"more mac addresses","ss":"Cli****"}]
			### why is gattering SSID´s and BSSID´s data from places where i visit???????


08.01_12:48:10_200 DEBUG [PushServiceNetworkHandler] }
08.01_12:48:10_200 DEBUG [PushServiceNetworkHandler] deviceType: 0
08.01_12:48:10_200 DEBUG [PushServiceNetworkHandler] msgClickList: null	sdkVersion: 3.26
08.01_12:48:10_200 DEBUG [PushServiceNetworkHandler] reserved: {"new_mid":"1af22fd9686fb7f9abb0c1729984bf0b9155d11a","new_mid_v":"4.06"}
08.01_12:48:10_200 DEBUG [PushServiceNetworkHandler] connVersion: 3
08.01_12:48:10_200 DEBUG [PushServiceNetworkHandler] guid: 11098807404
08.01_12:48:10_200 DEBUG [PushServiceNetworkHandler] , responseCode:0, response:confVersion: 32
08.01_12:48:10_200 DEBUG [PushServiceNetworkHandler] appOfflinePushMsgList: 0, []
08.01_12:48:10_200 DEBUG [PushServiceNetworkHandler] timeUs: 1564685259626629
08.01_12:48:10_200 DEBUG [PushServiceNetworkHandler] reconnCallback onResponse rsp==null?:false
08.01_12:48:10_202 DEBUG [PushServiceNetworkHandler] loadIPList :32
08.01_12:48:10_217 DEBUG [PushServiceNetworkHandler] sendMessage TpnsGetApListReq:netInfo: {
08.01_12:48:10_217 DEBUG [PushServiceNetworkHandler] 	ip: 0
08.01_12:48:10_217 DEBUG [PushServiceNetworkHandler] 	network: 3
08.01_12:48:10_217 DEBUG [PushServiceNetworkHandler] 	op: 0
08.01_12:48:10_217 DEBUG [PushServiceNetworkHandler] }
08.01_12:48:10_217 TRACE [TpnsChannel]            Action -> checkAndSetupClient( tpnsClient = a(ip:203.205.146.122,port:8080,protocol:tcp), isClientCreating = false)
08.01_12:48:10_220 DEBUG [TpnsChannel]            Action -> clientDidSendPacket packet : h protocol = 1 command = TPNS_COMMAND_GET_APLIST isResponse = false packetLength = 28
08.01_12:48:10_315 TRACE [BaseTask]               Horse run onRedirect(org:serverIp=203.205.146.122,serverPort=443, proxyIp=,proxyPort=80, protocolType=tcp, redirect=0,redirect:serverIp=203.205.146.122,serverPort=80, proxyIp=,proxyPort=80, protocolType=tcp, redirect=1)
08.01_12:48:10_315 DEBUG [XGHorse]                >> hasSuccessCallback && !strategyItem.isRedirected()
08.01_12:48:10_624 DEBUG [TpnsChannel]            Action -> clientDidReceivePacket packet : g protocol = 1 command = TPNS_COMMAND_GET_APLIST isResponse = true packetLength = 131
08.01_12:48:10_625 DEBUG [TpnsChannel]            Action -> clientDidReceivePacket RequestSuccRunnable NEV1 : g protocol = 1 command = TPNS_COMMAND_GET_APLIST isResponse = true packetLength = 131
08.01_12:48:10_634 DEBUG [PushServiceNetworkHandler] sendMessage onResponse request:netInfo: {
08.01_12:48:10_634 DEBUG [PushServiceNetworkHandler] 	ip: 0
08.01_12:48:10_634 DEBUG [PushServiceNetworkHandler] 	network: 3
08.01_12:48:10_634 DEBUG [PushServiceNetworkHandler] 	op: 0
08.01_12:48:10_634 DEBUG [PushServiceNetworkHandler] }
08.01_12:48:10_634 DEBUG [PushServiceNetworkHandler] , responseCode:0, response:apList: {
08.01_12:48:10_634 DEBUG [PushServiceNetworkHandler] 	primary: 3, {
08.01_12:48:10_634 DEBUG [PushServiceNetworkHandler] 		(
08.01_12:48:10_634 DEBUG [PushServiceNetworkHandler] 			1
08.01_12:48:10_634 DEBUG [PushServiceNetworkHandler] 			2056441291
08.01_12:48:10_634 DEBUG [PushServiceNetworkHandler] 		)
08.01_12:48:10_634 DEBUG [PushServiceNetworkHandler] 		(
08.01_12:48:10_634 DEBUG [PushServiceNetworkHandler] 			3
08.01_12:48:10_634 DEBUG [PushServiceNetworkHandler] 			2056441291
08.01_12:48:10_634 DEBUG [PushServiceNetworkHandler] 		)
08.01_12:48:10_634 DEBUG [PushServiceNetworkHandler] 		(
08.01_12:48:10_634 DEBUG [PushServiceNetworkHandler] 			2
08.01_12:48:10_634 DEBUG [PushServiceNetworkHandler] 			2056441291
08.01_12:48:10_634 DEBUG [PushServiceNetworkHandler] 		)
08.01_12:48:10_634 DEBUG [PushServiceNetworkHandler] 	}
08.01_12:48:10_634 DEBUG [PushServiceNetworkHandler] 	secondary: 3, {
08.01_12:48:10_634 DEBUG [PushServiceNetworkHandler] 		(
08.01_12:48:10_634 DEBUG [PushServiceNetworkHandler] 			1
08.01_12:48:10_634 DEBUG [PushServiceNetworkHandler] 			4092199863
08.01_12:48:10_634 DEBUG [PushServiceNetworkHandler] 		)
08.01_12:48:10_634 DEBUG [PushServiceNetworkHandler] 		(
08.01_12:48:10_634 DEBUG [PushServiceNetworkHandler] 			3
08.01_12:48:10_634 DEBUG [PushServiceNetworkHandler] 			2992826551
08.01_12:48:10_634 DEBUG [PushServiceNetworkHandler] 		)
08.01_12:48:10_634 DEBUG [PushServiceNetworkHandler] 		(
08.01_12:48:10_634 DEBUG [PushServiceNetworkHandler] 			2
08.01_12:48:10_634 DEBUG [PushServiceNetworkHandler] 			2119301946
08.01_12:48:10_634 DEBUG [PushServiceNetworkHandler] 		)
